entity Candidato {
    anosExperiencia Float,
    nombre String required maxlength(100),
    apellidoPaterno String required maxlength(100),
    apellidoMaterno String maxlength(100),
    fechaNacimiento LocalDate,
    edad Integer,
    emailPrincipal String required maxlength(100),
    emailAdicional String maxlength(100),
    emailAsignacion String maxlength(100),
    emailKode String maxlength(100),
    web String maxlength(100),
    telefonoCasa String maxlength(20),
    telefonoTrabajo String maxlength(20),
    telefonoCelular String maxlength(20),
    telefonoAdicional String maxlength(20),
    coorLat Float,
    coorLong Float,
    dirCodigoPostal String maxlength(5),
    dirCalle String maxlength(100),
    noExt String maxlength(100),
    noInt String maxlength(100),
    salarioNeto Float,
    costoTotal Float,
    contatoDuracionMinima Integer,
    disponibilidadEntrevistaFecha LocalDate,
    disponibilidadEntrevistaPeriodo Integer,
    disponibilidadAsignacionFecha LocalDate,
    disponibilidadAsignacionPeriodo String maxlength(100),
    antecedenteUltimoEmpleador String maxlength(100),
    antecedenteSalarioNeto Integer,
    notas String maxlength(1000),
    porcentajeIngles Integer,
    curp String maxlength(50),
    rfc String maxlength(50),
    nss String maxlength(50),
    sexo Sexo,
    estadoCivil EstadoCivil,
    fechaAlta Instant,
    fechaUltimoSeguimiento Instant,
    foto String maxlength(1000)
}
entity Documento{
    documento String
}
entity FormacionAcademica{
    formacionAcademica String
}
entity Colonia{
    colonia String maxlength(100)
}
entity Municipio{
    municipio String maxlength(100)
}
entity Estado{
    estado String maxlength(100)
}
entity CodigoPostal{
    codigoPostal String maxlength(5)
}
entity Perfil{
    perfil String
}
entity InstitucionAcademica{
    institucion String maxlength(200)
}
entity EstatusCandidato{
    estatus String maxlength(200)
}
entity EstCanInactivo {
    motivo String maxlength(200)
}
enum EstadoCivil {
    SOLTERO, CASADO
}
entity TipoPeriodo {
    periodo String maxlength(200)
}
enum Sexo {
    MASCULINO, FEMENINO
}
entity NivelPerfil{
    nivel String maxlength(200)
}
entity ReferenciasLaborales{
    empresa String maxlength(200)
    nombreContacto String maxlength(200),
    puestoContacto String maxlength(100),
    emailContaco String maxlength(100),
    telefonoContacto String maxlength(20)
}
entity EstatusAcademico{
    estatus String maxlength(100)
}
entity FuenteReclutamiento{
    fuente String maxlength(100)
}
entity EsquemaContratacionKode{
    esquema String maxlength(100)
}
entity EsqContRec{
    esquema String maxlength(100)
}
entity EstatusLaboral{
    estatus String maxlength(100)
}
entity Cuenta{
    clave String maxlength(100),
    nombre String maxlength(100)
}
entity Skill{
    nombre String maxlength(100)
}
entity TipoSkill{
    tipo String maxlength(100)
}
entity CategoriaSkill{
    categoria String maxlength(100)
}
entity SkillCandidato{
    calificacionSkill Float
}
entity DominioSkill{
    dominio String maxlength(100)
}
relationship OneToMany {
    Candidato to ReferenciasLaborales{candidato(nombre)},
    FuenteReclutamiento to Candidato{fuenteReclutamiento(fuente)},
    EstatusCandidato to Candidato{estatusCandidato(estatus)},
    EstatusCandidato to EstCanInactivo{estatusCandidato(estatus)},
    Perfil to Candidato{perfil(perfil)},
    NivelPerfil to Candidato{nivelPerfil(nivel)},
    InstitucionAcademica to Candidato{institucionAcademica(institucion)},
    EstatusAcademico to Candidato{estatusAcademico(estatus)},   
    FuenteReclutamiento to Candidato{fuenteReclutamiento(fuente)}, 
    EsquemaContratacionKode to Candidato{esquemaContratacionKode(esquema)},
    EstatusLaboral to Candidato{estatusLaboral(estatus)},
    Estado to Municipio{estado(estado)},
    Municipio to Colonia{municipio(municipio)},
    Municipio to CodigoPostal{municipio(municipio)}, 
    CodigoPostal to Colonia{codigoPostal(codigoPostal)},
    Colonia to Candidato{colonia(colonia)},
    EsqContRec to Candidato{antecedentesEsquemaContratacion(esquema)},
    FormacionAcademica to Candidato{estudios(formacionAcademica)},
    Candidato to SkillCandidato{idCandidato(nombre)},
    Skill to SkillCandidato{idSkill(nombre)},
    DominioSkill to SkillCandidato{nivelSkill(dominio)},
    CategoriaSkill to Skill{categoriaSkill(categoria)},
    EstCanInactivo to Candidato{estCanInactivo(motivo)}
}
relationship ManyToOne {
    Requerimiento{Cuenta(clave)} to Cuenta,
    Requerimiento{subCuenta(clave)} to Cuenta,
    ReqCan{Candidato(nombre)} to Candidato,
    ReqCan{Requerimiento(proyecto)} to Requerimiento,
    ReqCan{estatusReqCan(estatus)} to EstatusReqCan,
    ReqCan{estatusReqCanRec(motivo)} to EstatusReqCanRec,
    Candidato{disponibilidadEntrevistaPeriodoTiempo(periodo)} to TipoPeriodo,
    Candidato{disponibilidadAsignacionPeriodoTiempo(periodo)} to TipoPeriodo,
    Candidato{usuarioCreador(firstName)} to User,
    Candidato{usuarioAsignado(firstName)} to User,
    Requerimiento{usuarioCreador(firstName)} to User,
    Requerimiento{usuarioAsignado(firstName)} to User,
    Tarea{usuarioCreador(firstName)} to User,
    Tarea{usuarioEjecutor(firstName)} to User,
    Bitacora{usuario(firstName)} to User,
    Candidato{Documento(documento)} to Documento
}
relationship ManyToMany {
    Candidato{cuentaInteres(clave)} to Cuenta{candidatoInteres(nombre)},
    Candidato{cuentaRechazadas(clave)} to Cuenta{candidatoRechazadas(nombre)},
}
entity Requerimiento{
    fechaAlda Instant required,
    fechaResolucion Instant,
    remplazoDe String maxlength(500),
    vacantesSolicitadas Integer,
    proyecto String maxlength(200),
    nombreContacto String maxlength(100),
    tarifaSueldoNet Float,
    prestaciones String maxlength(500),
    duracionAsignacion Integer,
    lugarTrabajo String maxlength(500),
    coorLat Float,
    coorLong Float,
    horario String maxlength(300),
    informacionExamen String maxlength(500),
    informacionAdicional String maxlength(1000)
}
entity EstatusRequerimiento{
    estatus String maxlength(100)
}
entity EstReqCerrado{
    motivo String maxlength(100)
}
entity PrioridadReq{
    prioridad String maxlength(100)
}
entity TipoSolicitud{
    solicitud String maxlength(100)
}
entity TipoIngreso{
    tipo String maxlength(100)
}
entity BaseTarifa{
    base String maxlength(100)
}
entity SkillRequerimiento{
}
entity EstatusReqCan{
    estatus String maxlength(100)
}
entity EstatusReqCanRec{
    motivo String maxlength(100)
}
relationship OneToMany {
    EstatusRequerimiento to Requerimiento{estatusRequerimiento(estatus)},
    EstatusRequerimiento to EstReqCerrado{estatusRequerimiento(estatus)},
    PrioridadReq to Requerimiento{prioridad(prioridad)},
    TipoSolicitud to Requerimiento{tipoSolicitud(solicitud)},
    TipoIngreso to Requerimiento{tipoIngreso(tipo)},
    BaseTarifa to Requerimiento{baseTarifa(base)},
    EsqContRec to Requerimiento{esquemaContratacion(esquema)},
    Perfil to Requerimiento{perfil(perfil)},
    NivelPerfil to Requerimiento{nivelPerfil(nivel)},
    Requerimiento to SkillRequerimiento{idRequerimiento(proyecto)},
    Skill to SkillRequerimiento{idSkill(nombre)},
    TipoSkill to SkillRequerimiento{tipoSkill(tipo)},
    EstatusReqCan to EstatusReqCanRec{estatusReqCan(estatus)},
    EstReqCerrado to Requerimiento{estatusReqCan(motivo)},
    TipoPeriodo to Requerimiento{tipoPeriodo(periodo)}
}
entity Tarea{
    descripcion String maxlength(300),
    titulo String maxlength(100)
}
entity EstatusTarea{
    estatus String maxlength(100)
}
entity TipoTarea{
    tipo String maxlength(100)
}
relationship OneToMany {
    Requerimiento to Tarea{Requerimiento(proyecto)},
    Candidato to Tarea{Candidato(nombre)},
    EstatusTarea to Tarea{estatusTarea(estatus)},
    TipoTarea to Tarea{tipoTarea(tipo)}
}
entity Bitacora{
    fecha ZonedDateTime,
    comentario String maxlength(500)
}
relationship OneToMany {
    Requerimiento to Bitacora{requerimiento(proyecto)},
    Candidato to Bitacora{candidato(nombre)},
    Tarea to Bitacora{tarea(titulo)},
}

/**
 * Entidad Permiso
 * @author KODE
 */
entity Permiso {
	nombre String
    descripcion String
    activated Boolean
    deleted Boolean
    createdBy String maxlength(50)
    createdDate Instant
    lastModifiedBy String maxlength(50)
    lastModifiedDate Instant
}

/**
 * Entidad PermisoAuthority
 * @author KODE
 */
entity PermisoAuthority {
	authority String
    activated Boolean
    deleted Boolean
    createdBy String maxlength(50)
    createdDate Instant
    lastModifiedBy String maxlength(50)
    lastModifiedDate Instant
}
relationship ManyToOne {
    PermisoAuthority{permiso(nombre)} to Permiso   
}
entity ReqCan{
    
}
// Set pagination options
paginate * with pagination
// Use Data Transfert Objects (DTO)
dto * with mapstruct
// Set service options to all except few
service all with serviceImpl
filter *